[{"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\index.js":"1","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\App.js":"2","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\Store.js":"3","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\constants.js":"4","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\QueueScreen.js":"5","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\OrderScreen.js":"6","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\HomeScreen.js":"7","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\ChooseScreen.js":"8","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\AdminScreen.js":"9","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\ReviewScreen.js":"10","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\PaymentScreen.js":"11","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\SelectPaymentScreen.js":"12","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\CompleteOrderScreen.js":"13","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\actions.js":"14","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\styles.js":"15","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\components\\Logo.js":"16","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\components\\Keypad.js":"17"},{"size":257,"mtime":1690564970910,"results":"18","hashOfConfig":"19"},{"size":2367,"mtime":1690564970719,"results":"20","hashOfConfig":"19"},{"size":5286,"mtime":1690577201121,"results":"21","hashOfConfig":"19"},{"size":1202,"mtime":1690564970852,"results":"22","hashOfConfig":"19"},{"size":1805,"mtime":1691008574412,"results":"23","hashOfConfig":"19"},{"size":8321,"mtime":1690938021012,"results":"24","hashOfConfig":"19"},{"size":1224,"mtime":1691011111383,"results":"25","hashOfConfig":"19"},{"size":2496,"mtime":1690998840951,"results":"26","hashOfConfig":"19"},{"size":4171,"mtime":1690577297504,"results":"27","hashOfConfig":"19"},{"size":6221,"mtime":1691015468090,"results":"28","hashOfConfig":"19"},{"size":1892,"mtime":1691016340839,"results":"29","hashOfConfig":"19"},{"size":2525,"mtime":1691014701931,"results":"30","hashOfConfig":"19"},{"size":2084,"mtime":1691011574231,"results":"31","hashOfConfig":"19"},{"size":3179,"mtime":1690564970806,"results":"32","hashOfConfig":"19"},{"size":2441,"mtime":1691009898434,"results":"33","hashOfConfig":"19"},{"size":291,"mtime":1690667940691,"results":"34","hashOfConfig":"19"},{"size":616,"mtime":1691017368674,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1u9rhrn",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\index.js",[],["72","73"],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\App.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\Store.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\constants.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\QueueScreen.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\OrderScreen.js",["74"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport {\n  addToOrder,\n  clearOrder,\n  listCategories,\n  listProducts,\n  removeFromOrder,\n} from '../actions';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  Grid,\n  List,\n  ListItem,\n  Slide,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { Alert } from '@material-ui/lab';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nexport default function OrderScreen(props) {\n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { categories, loading, error } = state.categoryList;\n  const {\n    products,\n    loading: loadingProducts,\n    error: errorProducts,\n  } = state.productList;\n  const {\n    orderItems,\n    itemsCount,\n    totalPrice,\n    taxPrice,\n    orderType,\n  } = state.order;\n\n  const [categoryName, setCategoryName] = useState('');\n\n  const [quantity, setQuantity] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const [product, setProduct] = useState({});\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  const productClickHandler = (p) => {\n    setProduct(p);\n    setIsOpen(true);\n  };\n  const addToOrderHandler = () => {\n    addToOrder(dispatch, { ...product, quantity });\n    setIsOpen(false);\n  };\n  const cancelOrRemoveFromOrder = () => {\n    removeFromOrder(dispatch, product);\n    setIsOpen(false);\n  };\n  const previewOrderHandler = () => {\n    props.history.push(`/review`);\n  };\n  useEffect(() => {\n    if (!categories) {\n      listCategories(dispatch);\n    } else {\n      listProducts(dispatch, categoryName);\n    }\n  }, [categories, categoryName]);\n\n  const categoryClickHandler = (name) => {\n    setCategoryName(name);\n    listProducts(dispatch, categoryName);\n  };\n\n  return (\n    <Box className={styles.root}>\n      <Box className={styles.main}>\n        <Dialog\n          onClose={closeHandler}\n          aria-labelledby=\"max-width-dialog-title\"\n          open={isOpen}\n          fullWidth={true}\n          maxWidth=\"sm\"\n        >\n          <DialogTitle className={styles.center}>\n            Add {product.name}\n          </DialogTitle>\n          <Box className={[styles.row, styles.center]}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={quantity === 1}\n              onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\n            >\n              <RemoveIcon />\n            </Button>\n            <TextField\n              inputProps={{ className: styles.largeInput }}\n              InputProps={{\n                bar: true,\n                inputProps: {\n                  className: styles.largeInput,\n                },\n              }}\n              className={styles.largeNumber}\n              type=\"number\"\n              variant=\"filled\"\n              min={1}\n              value={quantity}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => setQuantity(quantity + 1)}\n            >\n              <AddIcon />\n            </Button>\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={cancelOrRemoveFromOrder}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              {orderItems.find((x) => x.name === product.name)\n                ? 'Remove From Order'\n                : 'Cancel'}\n            </Button>\n\n            <Button\n              onClick={addToOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              ADD To Order\n            </Button>\n          </Box>\n        </Dialog>\n\n        <Grid container>\n          <Grid item md={2}>\n            <List>\n              {loading ? (\n                <CircularProgress />\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : (\n                <>\n                  <ListItem button onClick={() => categoryClickHandler('')}>\n                    <Logo></Logo>\n                  </ListItem>\n                  {categories.map((category) => (\n                    <ListItem\n                      key={category.name}\n                      button\n                      onClick={() => categoryClickHandler(category.name)}\n                    >\n                      <Avatar alt={category.name} src={category.image} />\n                    </ListItem>\n                  ))}\n                </>\n              )}\n            </List>\n          </Grid>\n          <Grid item md={10}>\n            <Typography\n              gutterBottom\n              className={styles.title}\n              variant=\"h2\"\n              component=\"h2\"\n            >\n              {categoryName || 'Main Menu'}\n            </Typography>\n\n            <Grid container spacing={1}>\n              {loadingProducts ? (\n                <CircularProgress />\n              ) : errorProducts ? (\n                <Alert severity=\"error\">{errorProducts}</Alert>\n              ) : (\n                products.map((product) => (\n                  <Slide key={product.name} direction=\"up\" in={true}>\n                    <Grid item md={6}>\n                      <Card\n                        className={styles.card}\n                        onClick={() => productClickHandler(product)}\n                      >\n                        <CardActionArea>\n                          <CardMedia\n                            component=\"img\"\n                            alt={product.name}\n                            image={product.image}\n                            className={styles.media}\n                          />\n                          <CardContent>\n                            <Typography\n                              gutterBottom\n                              variant=\"body2\"\n                              color=\"textPrimary\"\n                              component=\"p\"\n                            >\n                              {product.name}\n                            </Typography>\n                            <Box className={styles.cardFooter}>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                              >\n                                {product.calorie} Cal\n                              </Typography>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textPrimary\"\n                                component=\"p\"\n                              >\n                                ${product.price}\n                              </Typography>\n                            </Box>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  </Slide>\n                ))\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box>\n        <Box>\n          <Box className={[styles.bordered, styles.space]}>\n            My Order - {orderType} | Tax: ${taxPrice} | Total: ${totalPrice} |\n            Items: {itemsCount}\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={() => {\n                clearOrder(dispatch);\n                props.history.push(`/`);\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.largeButton}\n            >\n              Cancel Order\n            </Button>\n\n            <Button\n              onClick={previewOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={orderItems.length === 0}\n              className={styles.largeButton}\n            >\n              Done\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\HomeScreen.js",["75"],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\ChooseScreen.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\AdminScreen.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\ReviewScreen.js",["76"],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\PaymentScreen.js",["77"],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\SelectPaymentScreen.js",["78","79"],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\screens\\CompleteOrderScreen.js",["80"],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\actions.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\styles.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\components\\Logo.js",[],"C:\\Users\\14144\\Downloads\\self-order-kiosk-final-master\\self-order-kiosk-final-master\\src\\components\\Keypad.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":79,"column":6,"nodeType":"87","endLine":79,"endColumn":32,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":41,"column":13,"nodeType":"96","endLine":41,"endColumn":62},{"ruleId":"89","severity":1,"message":"93","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":15},{"ruleId":"89","severity":1,"message":"97","line":17,"column":8,"nodeType":"91","messageId":"92","endLine":17,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":18,"column":6,"nodeType":"87","endLine":18,"endColumn":13,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'OrderScreen' is defined but never used.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [categories, categoryName, dispatch]",{"range":"107","text":"108"},"Update the dependencies array to be: [dispatch, order]",{"range":"109","text":"110"},[1835,1861],"[categories, categoryName, dispatch]",[653,660],"[dispatch, order]"]